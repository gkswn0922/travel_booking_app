{"version":3,"file":"isError-B7nJM5NX.js","names":[],"sources":["../src/isError.ts"],"sourcesContent":["type DefinitelyError<T> =\n  Extract<T, Error> extends never ? Error : Extract<T, Error>;\n/**\n * A function that checks if the passed parameter is an Error and narrows its type accordingly.\n *\n * @param data - The variable to check.\n * @returns True if the passed input is an Error, false otherwise.\n * @signature\n *    R.isError(data)\n * @example\n *    R.isError(new Error('message')) //=> true\n *    R.isError('somethingElse') //=> false\n * @category Guard\n */\nexport function isError<T>(data: Error | T): data is DefinitelyError<T> {\n  return data instanceof Error;\n}\n"],"mappings":"AAcA,SAAgB,EAAW,EAA6C,CACtE,OAAO,aAAgB"}