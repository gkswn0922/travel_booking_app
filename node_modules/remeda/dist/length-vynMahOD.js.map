{"version":3,"file":"length-vynMahOD.js","names":[],"sources":["../src/length.ts"],"sourcesContent":["import { purry } from \"./purry\";\n\ntype Enumerable<T> = ArrayLike<T> | Iterable<T>;\n\n/**\n * Counts values of the collection or iterable.\n *\n * @param items - The input data.\n * @signature\n *    R.length(array)\n * @example\n *    R.length([1, 2, 3]) // => 3\n * @dataFirst\n * @category Array\n */\nexport function length<T>(items: Enumerable<T>): number;\n\n/**\n * Counts values of the collection or iterable.\n *\n * @signature\n *    R.length()(array)\n * @example\n *    R.pipe([1, 2, 3], R.length()) // => 3\n * @dataLast\n * @category Array\n */\nexport function length<T>(): (items: Enumerable<T>) => number;\n\nexport function length(...args: ReadonlyArray<unknown>): unknown {\n  return purry(lengthImplementation, args);\n}\n\nconst lengthImplementation = <T>(items: Enumerable<T>): number =>\n  \"length\" in items ? items.length : [...items].length;\n"],"mappings":"4CA6BA,SAAgB,EAAO,GAAG,EAAuC,CAC/D,OAAO,EAAM,EAAsB,EAAK,CAG1C,MAAM,EAA2B,GAC/B,WAAY,EAAQ,EAAM,OAAS,CAAC,GAAG,EAAM,CAAC"}